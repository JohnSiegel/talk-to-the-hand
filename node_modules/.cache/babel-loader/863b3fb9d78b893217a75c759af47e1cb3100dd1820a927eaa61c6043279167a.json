{"ast":null,"code":"var _jsxFileName = \"/Users/ramankhatrichhetri/Documents/GitHub/talk-to-the-hand/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { Suspense, useRef, useState } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Environment } from \"@react-three/drei\";\nimport Overlay from \"./Overlay\";\nimport Model from \"./Model\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LIGHT_COLOR = {\n  r: 44 / 255,\n  g: 0 / 255,\n  b: 63 / 255\n};\nconst DARK_COLOR = {\n  r: 0,\n  g: 0,\n  b: 0\n};\nfunction App() {\n  _s();\n  const overlay = useRef();\n  const caption = useRef();\n  const scroll = useRef(0);\n  const [backgroundColor, setBackgroundColor] = useState(0);\n  console.log({\n    r: DARK_COLOR.r + (LIGHT_COLOR.r - DARK_COLOR.r) * backgroundColor,\n    g: DARK_COLOR.g + (LIGHT_COLOR.g - DARK_COLOR.g) * backgroundColor,\n    b: DARK_COLOR.b + (LIGHT_COLOR.b - DARK_COLOR.b) * backgroundColor\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      shadows: true,\n      onCreated: state => state.events.connect(overlay.current),\n      raycaster: {\n        computeOffsets: _ref => {\n          let {\n            clientX,\n            clientY\n          } = _ref;\n          return {\n            offsetX: clientX,\n            offsetY: clientY\n          };\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"color\", {\n        attach: \"background\",\n        r: DARK_COLOR.r + (LIGHT_COLOR.r - DARK_COLOR.r) * backgroundColor,\n        g: DARK_COLOR.g + (LIGHT_COLOR.g - DARK_COLOR.g) * backgroundColor,\n        b: DARK_COLOR.b + (LIGHT_COLOR.b - DARK_COLOR.b) * backgroundColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(Model, {\n          scroll: scroll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Environment, {\n          preset: \"city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      ref: overlay,\n      caption: caption,\n      scroll: scroll,\n      backgroundColor: backgroundColor,\n      setBackgroundColor: setBackgroundColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"G7dL0pkspevaM8fBlEOrxuOfWfY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Suspense","useRef","useState","Canvas","Environment","Overlay","Model","jsxDEV","_jsxDEV","Fragment","_Fragment","LIGHT_COLOR","r","g","b","DARK_COLOR","App","_s","overlay","caption","scroll","backgroundColor","setBackgroundColor","console","log","children","shadows","onCreated","state","events","connect","current","raycaster","computeOffsets","_ref","clientX","clientY","offsetX","offsetY","attach","fileName","_jsxFileName","lineNumber","columnNumber","intensity","fallback","preset","ref","_c","$RefreshReg$"],"sources":["/Users/ramankhatrichhetri/Documents/GitHub/talk-to-the-hand/src/App.js"],"sourcesContent":["import React, { Suspense, useRef, useState } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Environment } from \"@react-three/drei\";\nimport Overlay from \"./Overlay\";\nimport Model from \"./Model\";\n\nconst LIGHT_COLOR = {\n  r: 44/255, g:0/255, b:63/255\n};\n\nconst DARK_COLOR = {\n  r: 0, g: 0, b: 0,\n}\n\nfunction App() {\n  const overlay = useRef();\n  const caption = useRef();\n  const scroll = useRef(0);\n  const [backgroundColor, setBackgroundColor] = useState(0);\n  console.log({\n          r: DARK_COLOR.r + (LIGHT_COLOR.r - DARK_COLOR.r) * backgroundColor,\n          g: DARK_COLOR.g + (LIGHT_COLOR.g - DARK_COLOR.g) * backgroundColor,\n          b: DARK_COLOR.b + (LIGHT_COLOR.b - DARK_COLOR.b) * backgroundColor\n  })\n  return (\n    <>\n      <Canvas\n        shadows\n        onCreated={(state) => state.events.connect(overlay.current)}\n        raycaster={{\n          computeOffsets: ({ clientX, clientY }) => ({\n            offsetX: clientX,\n            offsetY: clientY,\n          }),\n        }}\n      >\n        <color\n          attach={\"background\"}\n          r={DARK_COLOR.r + (LIGHT_COLOR.r - DARK_COLOR.r) * backgroundColor}\n          g={DARK_COLOR.g + (LIGHT_COLOR.g - DARK_COLOR.g) * backgroundColor}\n          b={DARK_COLOR.b + (LIGHT_COLOR.b - DARK_COLOR.b) * backgroundColor}\n        />\n        <ambientLight intensity={1} />\n        <Suspense fallback={null}>\n          <Model scroll={scroll} />\n          <Environment preset=\"city\" />\n        </Suspense>\n      </Canvas>\n      <Overlay\n        ref={overlay}\n        caption={caption}\n        scroll={scroll}\n        backgroundColor={backgroundColor}\n        setBackgroundColor={setBackgroundColor}\n      />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACzD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,WAAW,GAAG;EAClBC,CAAC,EAAE,EAAE,GAAC,GAAG;EAAEC,CAAC,EAAC,CAAC,GAAC,GAAG;EAAEC,CAAC,EAAC,EAAE,GAAC;AAC3B,CAAC;AAED,MAAMC,UAAU,GAAG;EACjBH,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE;AACjB,CAAC;AAED,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,OAAO,GAAGjB,MAAM,EAAE;EACxB,MAAMkB,OAAO,GAAGlB,MAAM,EAAE;EACxB,MAAMmB,MAAM,GAAGnB,MAAM,CAAC,CAAC,CAAC;EACxB,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACzDqB,OAAO,CAACC,GAAG,CAAC;IACJZ,CAAC,EAAEG,UAAU,CAACH,CAAC,GAAG,CAACD,WAAW,CAACC,CAAC,GAAGG,UAAU,CAACH,CAAC,IAAIS,eAAe;IAClER,CAAC,EAAEE,UAAU,CAACF,CAAC,GAAG,CAACF,WAAW,CAACE,CAAC,GAAGE,UAAU,CAACF,CAAC,IAAIQ,eAAe;IAClEP,CAAC,EAAEC,UAAU,CAACD,CAAC,GAAG,CAACH,WAAW,CAACG,CAAC,GAAGC,UAAU,CAACD,CAAC,IAAIO;EAC3D,CAAC,CAAC;EACF,oBACEb,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA,CAACL,MAAM;MACLuB,OAAO;MACPC,SAAS,EAAGC,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACC,OAAO,CAACZ,OAAO,CAACa,OAAO,CAAE;MAC5DC,SAAS,EAAE;QACTC,cAAc,EAAEC,IAAA;UAAA,IAAC;YAAEC,OAAO;YAAEC;UAAQ,CAAC,GAAAF,IAAA;UAAA,OAAM;YACzCG,OAAO,EAAEF,OAAO;YAChBG,OAAO,EAAEF;UACX,CAAC;QAAA;MACH,CAAE;MAAAX,QAAA,gBAEFjB,OAAA;QACE+B,MAAM,EAAE,YAAa;QACrB3B,CAAC,EAAEG,UAAU,CAACH,CAAC,GAAG,CAACD,WAAW,CAACC,CAAC,GAAGG,UAAU,CAACH,CAAC,IAAIS,eAAgB;QACnER,CAAC,EAAEE,UAAU,CAACF,CAAC,GAAG,CAACF,WAAW,CAACE,CAAC,GAAGE,UAAU,CAACF,CAAC,IAAIQ,eAAgB;QACnEP,CAAC,EAAEC,UAAU,CAACD,CAAC,GAAG,CAACH,WAAW,CAACG,CAAC,GAAGC,UAAU,CAACD,CAAC,IAAIO;MAAgB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnE,eACFnC,OAAA;QAAcoC,SAAS,EAAE;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC9BnC,OAAA,CAACR,QAAQ;QAAC6C,QAAQ,EAAE,IAAK;QAAApB,QAAA,gBACvBjB,OAAA,CAACF,KAAK;UAACc,MAAM,EAAEA;QAAO;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACzBnC,OAAA,CAACJ,WAAW;UAAC0C,MAAM,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eACTnC,OAAA,CAACH,OAAO;MACN0C,GAAG,EAAE7B,OAAQ;MACbC,OAAO,EAAEA,OAAQ;MACjBC,MAAM,EAAEA,MAAO;MACfC,eAAe,EAAEA,eAAgB;MACjCC,kBAAkB,EAAEA;IAAmB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvC;EAAA,gBACD;AAEP;AAAC1B,EAAA,CA3CQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}