{"ast":null,"code":"var _jsxFileName = \"/Users/ramankhatrichhetri/Documents/GitHub/talk-to-the-hand/src/Model.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF, PerspectiveCamera } from \"@react-three/drei\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MODEL_Y = -150;\nconst CAMERA_START_Y = 600;\nconst CAMERA_END_Y = 0;\nconst CAMERA_START_X = -10;\nconst CAMERA_END_X = -150;\nconst SCROLL_THRESH = 0.85;\nconst MODEL_START_ROT = 0;\nconst MODEL_END_ROT = Math.PI / 4;\nexport default function Model(_ref) {\n  _s();\n  let {\n    scroll\n  } = _ref;\n  const gltf = useGLTF(\"/scene.glb\", false);\n  const camera = useRef();\n  const model = useRef();\n  useFrame(state => {\n    camera.current.position.y = CAMERA_START_Y - scroll.current * Math.abs(CAMERA_END_Y - CAMERA_START_Y);\n    model.current.rotation.y = Math.max(scroll.current - SCROLL_THRESH, 0) / (1 - SCROLL_THRESH) * (MODEL_END_ROT - MODEL_START_ROT) + MODEL_START_ROT;\n    camera.current.position.x = Math.max(scroll.current - SCROLL_THRESH, 0) / (1 - SCROLL_THRESH) * (CAMERA_START_X - CAMERA_END_X) + CAMERA_START_X;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"group\", {\n      ref: model,\n      position: [0, MODEL_Y, 0.35],\n      rotation: [0, MODEL_START_ROT, 0],\n      children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n        object: gltf.scene\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n      name: \"Camera\",\n      ref: camera,\n      position: [CAMERA_START_X, CAMERA_START_Y, 210],\n      children: /*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        children: /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n          castShadow: true,\n          position: [10, 20, 15],\n          \"shadow-camera-right\": 8,\n          \"shadow-camera-top\": 8,\n          \"shadow-camera-left\": -8,\n          \"shadow-camera-bottom\": -8,\n          \"shadow-mapSize-width\": 1024,\n          \"shadow-mapSize-height\": 1024,\n          intensity: 2,\n          \"shadow-bias\": -0.0001\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Model, \"DYKsV88pD1R5qhApPvSwPM7DG4Q=\", false, function () {\n  return [useGLTF, useFrame];\n});\n_c = Model;\nuseGLTF.preload(\"/scene.glb\");\nvar _c;\n$RefreshReg$(_c, \"Model\");","map":{"version":3,"names":["React","useRef","useFrame","useGLTF","PerspectiveCamera","jsxDEV","_jsxDEV","MODEL_Y","CAMERA_START_Y","CAMERA_END_Y","CAMERA_START_X","CAMERA_END_X","SCROLL_THRESH","MODEL_START_ROT","MODEL_END_ROT","Math","PI","Model","_ref","_s","scroll","gltf","camera","model","state","current","position","y","abs","rotation","max","x","dispose","children","ref","object","scene","fileName","_jsxFileName","lineNumber","columnNumber","name","makeDefault","castShadow","intensity","_c","preload","$RefreshReg$"],"sources":["/Users/ramankhatrichhetri/Documents/GitHub/talk-to-the-hand/src/Model.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF, PerspectiveCamera } from \"@react-three/drei\";\n\nconst MODEL_Y = -150;\n\nconst CAMERA_START_Y = 600;\nconst CAMERA_END_Y = 0;\n\nconst CAMERA_START_X = -10;\nconst CAMERA_END_X = -150;\n\nconst SCROLL_THRESH = 0.85;\n\nconst MODEL_START_ROT = 0;\nconst MODEL_END_ROT = Math.PI / 4;\n\nexport default function Model({ scroll }) {\n  const gltf = useGLTF(\"/scene.glb\", false);\n  const camera = useRef();\n  const model = useRef();\n  useFrame((state) => {\n    camera.current.position.y =\n      CAMERA_START_Y - scroll.current * Math.abs(CAMERA_END_Y - CAMERA_START_Y);\n    model.current.rotation.y =\n      (Math.max(scroll.current - SCROLL_THRESH, 0) / (1 - SCROLL_THRESH)) *\n        (MODEL_END_ROT - MODEL_START_ROT) +\n      MODEL_START_ROT;\n    camera.current.position.x =\n      (Math.max(scroll.current - SCROLL_THRESH, 0) / (1 - SCROLL_THRESH)) *\n        (CAMERA_START_X - CAMERA_END_X) +\n      CAMERA_START_X;\n  });\n  return (\n    <group dispose={null}>\n      <group\n        ref={model}\n        position={[0, MODEL_Y, 0.35]}\n        rotation={[0, MODEL_START_ROT, 0]}\n      >\n        <primitive object={gltf.scene} />\n      </group>\n      <group\n        name=\"Camera\"\n        ref={camera}\n        position={[CAMERA_START_X, CAMERA_START_Y, 210]}\n      >\n        <PerspectiveCamera makeDefault>\n          <directionalLight\n            castShadow\n            position={[10, 20, 15]}\n            shadow-camera-right={8}\n            shadow-camera-top={8}\n            shadow-camera-left={-8}\n            shadow-camera-bottom={-8}\n            shadow-mapSize-width={1024}\n            shadow-mapSize-height={1024}\n            intensity={2}\n            shadow-bias={-0.0001}\n          />\n        </PerspectiveCamera>\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/scene.glb\");\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}