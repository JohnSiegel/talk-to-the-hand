{"ast":null,"code":"var _jsxFileName = \"/Users/ramankhatrichhetri/Documents/GitHub/talk-to-the-hand/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const handleInputChange = event => {\n    const inputText = event.target.value;\n    const words = inputText.split(/\\s+/);\n    if (words.length <= 500) {\n      setUserInput(inputText);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Call the text to ASL function with userInput\n    console.log('User Input:', userInput);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text to ASL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text-input\",\n        children: [\"Enter text (up to 500 words):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"text-input\",\n          value: userInput,\n          onChange: handleInputChange,\n          rows: 10,\n          cols: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LB5RX8bhx9UtyfDkZOdgmRjMvrI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","handleInputChange","event","inputText","target","value","words","split","length","handleSubmit","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","rows","cols","type","_c","$RefreshReg$"],"sources":["/Users/ramankhatrichhetri/Documents/GitHub/talk-to-the-hand/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // Import your CSS file\n\nconst App = () => {\n  const [userInput, setUserInput] = useState('');\n\n  const handleInputChange = (event) => {\n    const inputText = event.target.value;\n    const words = inputText.split(/\\s+/);\n    if (words.length <= 500) {\n      setUserInput(inputText);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Call the text to ASL function with userInput\n    console.log('User Input:', userInput);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Text to ASL</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"text-input\">\n          Enter text (up to 500 words):\n          <textarea\n            id=\"text-input\"\n            value={userInput}\n            onChange={handleInputChange}\n            rows={10}\n            cols={50}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACpC,MAAMC,KAAK,GAAGH,SAAS,CAACI,KAAK,CAAC,KAAK,CAAC;IACpC,IAAID,KAAK,CAACE,MAAM,IAAI,GAAG,EAAE;MACvBR,YAAY,CAACG,SAAS,CAAC;IACzB;EACF,CAAC;EAED,MAAMM,YAAY,GAAIP,KAAK,IAAK;IAC9BA,KAAK,CAACQ,cAAc,EAAE;IACtB;IACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEb,SAAS,CAAC;EACvC,CAAC;EAED,oBACEH,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpBtB,OAAA;MAAMuB,QAAQ,EAAEV,YAAa;MAAAK,QAAA,gBAC3BlB,OAAA;QAAOwB,OAAO,EAAC,YAAY;QAAAN,QAAA,GAAC,+BAE1B,eAAAlB,OAAA;UACEyB,EAAE,EAAC,YAAY;UACfhB,KAAK,EAAEN,SAAU;UACjBuB,QAAQ,EAAErB,iBAAkB;UAC5BsB,IAAI,EAAE,EAAG;UACTC,IAAI,EAAE;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACRtB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACNtB,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAACpB,EAAA,CApCID,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}